resources:
 containers:
   - container: mssql
     image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
     ports:
     - 1433:1433
     env:
      SA_PASSWORD: P@ssw0rd
      ACCEPT_EULA: Y

trigger:
- develop
- master
pr: none

name: InnovationServiceAPI_$(SourceBranchName)_1.0.0_$(Date:yyyyMMdd)_$(Rev:.r)

pool:
  vmImage: 'ubuntu-latest'


services:
  mssql: mssql

variables:
  DB_TESTS_HOST: 'localhost'
  DB_TESTS_USER: 'test_usr'
  DB_TESTS_PWD: 'SuperSecret52!!'
  DB_TESTS_NAME: 'tests'

steps:
- task: PowerShell@2
  displayName: 'Wait for MSSQL Start'
  inputs:
    targetType: 'inline'
    script: |
      # Write your PowerShell commands here.
      start-sleep -s 10

- script: |
    sqlcmd -S localhost -U sa -P P@ssw0rd -p -Q "CREATE DATABASE tests;"
    sqlcmd -S localhost -U sa -P P@ssw0rd -p -Q "USE tests; CREATE LOGIN test_usr WITH PASSWORD='SuperSecret52!!';"
    sqlcmd -S localhost -U sa -P P@ssw0rd -p -Q "USE tests; CREATE USER test_usr from LOGIN test_usr;"
    sqlcmd -S localhost -U sa -P P@ssw0rd -p -Q "USE tests; EXEC sp_addrolemember 'db_owner', 'test_usr';"
    sqlcmd -S localhost -U test_usr -P SuperSecret52!! -p -Q "SELECT @@VERSION;"
  displayName: 'Setup SQL Container'

- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

- task: Npm@1
  inputs:
    command: 'install'
    verbose: true
  displayName: 'Install dependencies'

- script: |
    npm run migrations:run
  displayName: 'Run Migrations against the Container'

- script: |
    npm test
  displayName: 'Run Tests'

- script: |
    npm run build
  displayName: 'Run Build'

- task: CopyFiles@2
  inputs:
    Contents: |
      **/*
      !.git/**
      !coverage/**
      !.vscode/**
      !azure-pipelines-build-and-publish.yml
      !azure-pipelines-pull-request.yml
      !jest.config.js
      !local.settings.json
      !package-lock.json
      !README.MD
      !commitizen.js
      !azure-pipelines-publish.yml
      !.eslintrc.js
      !.npmrc
      !.gitignore
      !.funcignore
      !__tests__
      !surveyCreateOne
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Functions.zip'
    replaceExistingArchive: true
  
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/Functions.zip'
    ArtifactName: 'drop'
    publishLocation: 'Container'